import { ComponentType, ComponentInstance } from '0g/dist-esm/Component';
import { Game } from '0g/dist-esm/Game';
/**
 * Manages pools of Components based on their Type, and
 * the presence of Components assigned to Entities.
 */
export declare class ComponentManager {
    componentTypes: ComponentType<any>[];
    private game;
    private pools;
    private changed;
    constructor(componentTypes: ComponentType<any>[], game: Game);
    acquire: (typeId: number, initialValues: any) => any;
    release: (instance: ComponentInstance<any>) => void;
    wasChangedLastFrame: (componentInstanceId: number) => boolean;
    private onComponentChanged;
    markChanged: (component: ComponentInstance<any>) => void;
    private resetChanged;
    getTypeName: (typeId: number) => string;
}
